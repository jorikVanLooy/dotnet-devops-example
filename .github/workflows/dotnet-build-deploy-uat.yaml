# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and push uat

on:
  workflow_dispatch:
    
  push:
    branches:
      - "main"

jobs:
  build:
    environment:
      "uat"
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      workdir: "aspnet-core-dotnet-core"

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '2.2.x'
    - run: |
        dotnet restore
      name: download and restore dependencies
      working-directory: ${{ env.workdir }}

    - run: |
        dotnet test
      name: test the application
      working-directory: ${{ env.workdir }}

    - run: |
        dotnet publish
      name: build and publish the application
      working-directory: ${{ env.workdir }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: login to docker
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ env.workdir }}/Dockerfile
        push: true
        tags: jorikvl/dotnet-devops-example:uat
  
  deploy:
    needs: build
    permissions:
      id-token: write
    runs-on:
      ubuntu-latest
    environment: "uat"
    steps:
      - name: login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: deploy to Container App
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az extension add --name containerapp --upgrade
            az containerapp update \
              -n uat-app-dotnet -g rg-uat \
            --image "docker.io/jorikvl/dotnet-devops-example:dev"
